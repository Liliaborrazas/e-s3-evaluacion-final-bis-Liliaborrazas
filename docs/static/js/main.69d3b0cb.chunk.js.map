{"version":3,"sources":["components/Repo.js","components/RepoList.js","components/Search.js","components/RepoCard.js","App.js","services/reposService.js","index.js"],"names":["Repo","color","_this$props","this","props","urlHtml","name","description","language","react_default","a","createElement","className","href","concat","createColor","Component","RepoList","filterData","map","item","id","key","components_Repo","html_url","Link","to","type","Search","onChange","getSelect","value","placeholder","onKeyUp","getRepo","RepoCard","repos","repoId","match","params","length","repo","stargazers_count","watchers","forks","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","select","filter","bind","assertThisInitialized","getRepos","_this2","fetch","then","response","json","data","dataRepos","index","objectSpread","setState","e","change","target","author","currentTarget","toLowerCase","includes","_this3","repoResults","Switch","Route","exact","path","render","react","components_Search","components_RepoList","components_RepoCard","ReactDOM","HashRouter","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.69d3b0cb.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n\n\nclass Repo extends Component {\n  createColor(color){\n    if(color ===\"HTML\" ){\n      return \"html\"\n    }else if( color=== \"JavaScript\"){\n      return \"javascript\"\n    }else{\n      return \"css\"\n    }\n\n  }\n    render() {\n      const {urlHtml, name, description, language} = this.props;\n      return( \n        <div className=\"repos\">\n          <div className=\"repos__name\"><h2 className=\"repo__name\"><a href={urlHtml}>{name}</a></h2></div>\n          <div className=\"repos__info\">{description}</div>\n          <div className=\"repos__language\"><div className={`${this.createColor(language)}`}></div>{language}</div>\n        </div>)\n    }\n}\n\nRepo.propTypes = { \n\n  urlHtml: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  language: PropTypes.string.isRequired\n  \n };\n\n \nexport default Repo;","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport Repo from './Repo';\nimport PropTypes from 'prop-types';\n\n\nclass RepoList extends Component {\n    render() {\n        return(\n        <ul className=\"app__list\">\n        {this.props.filterData.map(item =>{\n          return(\n          <li className=\"app__list-item\" id={item.id} key={item.id}>\n            <Repo urlHtml={item.html_url} name={item.name} description={item.description}\n             language={item.language}/>\n            <Link to={`/repo/${item.id}`}><button type=\"button\" className=\"btn\">Ver m√°s</button></Link>\n          </li>\n                 )\n        })}\n        </ul>)\n    }\n}\n RepoList.propTypes = { \n\n  filterData: PropTypes.arrayOf(PropTypes.object)\n  \n };\n\n\nexport default RepoList;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n\n\nclass Search extends Component {\n    render() {\n        return(\n            <div className=\"app__header-container\">\n             <h1 className=\"app__title\">Repos at Adalab in Github</h1>\n                <select className=\"app__filter-languages\" onChange = {this.props.getSelect}>\n                <option value=\"HTML\">HTML</option>\n                <option value=\"CSS\">CSS</option>\n                <option value=\"JavaScript\">JavaScript</option>\n                </select>\n                <input className=\"input-filter\" type=\"text\" placeholder=\"Search\" onKeyUp={this.props.getRepo}/>\n            </div>\n        )\n    }\n}\n\nSearch.propTypes = {\n    getRepo : PropTypes.func.isRequired,\n    getSelect : PropTypes.func.isRequired\n}\n\nexport default Search;","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\n\n\n\n\nclass RepoCard extends Component {\n    render() {\n\n      const {repos} = this.props;\n      const repoId = this.props.match.params.id;\n      if(repos.length === 0 || repoId >= repos.length){\n          return <p>No hay datos que pintar</p>;   \n        }else{ \n            const repo = repos[repoId];\n            const {html_url, name, description, language, stargazers_count, watchers, forks } = repo;\n            return( \n                <div className=\"repos repos__card\">\n                <div className=\"repos__card-name\"><h2 className=\"repo__card-name\"><a href={html_url}>{name}</a></h2></div>\n                <div className=\"repos__card-info\">{description}</div>\n                <div className=\"repos__card-language\">{language}</div>\n                <div className=\"repos__card-stargazers\">Stars: {stargazers_count}</div>\n                <div className=\"repos__card-watchers\">Watchers: {watchers}</div>\n                <div className=\"repos__card-forks\">forks: {forks}</div>\n                <Link to=\"/\"><button type=\"button\" className=\"btn\">volver</button></Link>\n              </div>)\n          }\n          \n      }\n\n}\n\n\n\n \nexport default RepoCard;","import React, { Component, Fragment } from 'react';\nimport {Switch, Route} from 'react-router-dom';\nimport './App.scss';\nimport { fetchRepos } from './services/reposService';\nimport RepoList from './components/RepoList';\nimport Search from './components/Search';\nimport RepoCard from './components/RepoCard';\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      repos: [],\n      select: \"\",\n      filter: \"\"\n\n    };\n\n    this.getRepo = this.getRepo.bind(this); \n    this.getSelect = this.getSelect.bind(this);\n  }\n\n  componentDidMount(){\n    this.getRepos();\n\n  }\n\n  getRepos(){\n    fetchRepos()\n     .then(data => {\n       const dataRepos = data.map((item, index)=>{\n         return {...item, id:index};\n       });\n       this.setState({\n         repos: dataRepos\n       })\n     });\n    }\n\n  getSelect(e){\n    const change = e.target.value;\n    this.setState({select:change})\n\n  }\n  \n  getRepo(e){\n    const author = e.currentTarget.value;\n    this.setState({filter:author});\n  };\n\n  filterData(){\n    const repos = this.state.repos;\n    const filter = this.state.filter;\n    const select = this.state.select;\n\n    return repos.filter(item =>\n      item.name.toLowerCase().includes(filter.toLowerCase())\n      \n      ).filter(item =>{\n        return(item.language.includes(select))\n      })\n      \n      \n  }\n\n  render() {\n    const repoResults = this.filterData()\n    return (\n      <div className=\"app\">\n      <Switch>\n          <Route exact path=\"/\" render={()=>(\n            <Fragment>\n              <header className=\"app__header\">\n                <Search getRepo={this.getRepo} getSelect={this.getSelect}/>\n              </header>\n              <main>\n                <RepoList filterData={repoResults}/>\n              </main>   \n            </Fragment>\n\n          )}/>\n           <Route path=\"/repo/:id\" render={props=>(\n           <RepoCard match={props.match}repos={this.state.repos}/>\n           )}/>\n      </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const ENDPOINT = 'https://api.github.com/orgs/Adalab/repos';\n\nconst fetchRepos = () => fetch(ENDPOINT).then(response => response.json());\n\nexport { fetchRepos }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport {HashRouter} from 'react-router-dom';\n\nReactDOM.render(<HashRouter><App/></HashRouter>, document.getElementById('root'));\n\n"],"sourceRoot":""}